public class InheritRun {


/*
*  상속 부모 타입엥서 가지고 있는 멤버 (변수/메소드)를 자식 클래스에서
*  직접 만들지 않고 상속 받아 자신의 멤법(변수/메소드)처럼 사용할 수 있는 기능
*  표현법 *extends
*
*   [접근제한자][예약어]class 클래스명 extends 부모클래스명{  }
*
*  * 중복된 코드를 하나로 관리할 수 있기 때문에 추가/수정이 용이함
*  * 적은 양의 코드를 새로운 클래스를 작성 가능하다
*
*
*  * 특징 :
*           - 클래스 간의 상속은 [단일 상속만 가능] 하나의 부모 타입만 상속을 받을 수 있다
*           - private 멤버 (변수/메소드) 직접 접근 불가
*           - 자식 객체에서 부모 클래스에 정의되어 있는 메소드를 내것처럼 호출하여 사용 가능
*           - 모든 클래스는 Object에 상속을 받는다 명시되어 있지는 않지만
*           -
*  * 오버라이딩 : 부모 타입에 있는 메소드를 자식 클래스에서 재정의하는 것
*  * 부모 타입 정의된 메소드명, 반환타입, 매개변수(개수/타입/순서) 동일해야되는 것
*  * 접근제한자는 같은 범위이거나 큰 범위어야 한다
*  * 부모타입에 메소드 접근제한자 : public --> public
*  *  default -- > default / protected / public
*
*
*       *  예외처리 : 같은 클래스거나 그 클래스의 자식클래스만 가능
*       *
*
* */


    public static void main(String[] args) {
        // 호출하거나 출력하는 건 메소드 안에 있어야 된다.

        Fruit f = new Fruit("수박",15000);
        MyFruit mf = new MyFruit("딸기",1500);

        System.out.println(f);
        System.out.println(mf);

       // MyFruit

    }


}
